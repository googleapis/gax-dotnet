/*
 * Copyright 2020 Google LLC All Rights Reserved.
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file or at
 * https://developers.google.com/open-source/licenses/bsd
 */

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/rpc/context/attribute_context.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Rpc.Context {

  /// <summary>Holder for reflection information generated from google/rpc/context/attribute_context.proto</summary>
  public static partial class AttributeContextReflection {

    #region Descriptor
    /// <summary>File descriptor for google/rpc/context/attribute_context.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AttributeContextReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipnb29nbGUvcnBjL2NvbnRleHQvYXR0cmlidXRlX2NvbnRleHQucHJvdG8S",
            "Emdvb2dsZS5ycGMuY29udGV4dBoZZ29vZ2xlL3Byb3RvYnVmL2FueS5wcm90",
            "bxocZ29vZ2xlL3Byb3RvYnVmL3N0cnVjdC5wcm90bxofZ29vZ2xlL3Byb3Rv",
            "YnVmL3RpbWVzdGFtcC5wcm90byLwDAoQQXR0cmlidXRlQ29udGV4dBI5CgZv",
            "cmlnaW4YByABKAsyKS5nb29nbGUucnBjLmNvbnRleHQuQXR0cmlidXRlQ29u",
            "dGV4dC5QZWVyEjkKBnNvdXJjZRgBIAEoCzIpLmdvb2dsZS5ycGMuY29udGV4",
            "dC5BdHRyaWJ1dGVDb250ZXh0LlBlZXISPgoLZGVzdGluYXRpb24YAiABKAsy",
            "KS5nb29nbGUucnBjLmNvbnRleHQuQXR0cmlidXRlQ29udGV4dC5QZWVyEj0K",
            "B3JlcXVlc3QYAyABKAsyLC5nb29nbGUucnBjLmNvbnRleHQuQXR0cmlidXRl",
            "Q29udGV4dC5SZXF1ZXN0Ej8KCHJlc3BvbnNlGAQgASgLMi0uZ29vZ2xlLnJw",
            "Yy5jb250ZXh0LkF0dHJpYnV0ZUNvbnRleHQuUmVzcG9uc2USPwoIcmVzb3Vy",
            "Y2UYBSABKAsyLS5nb29nbGUucnBjLmNvbnRleHQuQXR0cmlidXRlQ29udGV4",
            "dC5SZXNvdXJjZRI1CgNhcGkYBiABKAsyKC5nb29nbGUucnBjLmNvbnRleHQu",
            "QXR0cmlidXRlQ29udGV4dC5BcGkSKAoKZXh0ZW5zaW9ucxgIIAMoCzIULmdv",
            "b2dsZS5wcm90b2J1Zi5BbnkavgEKBFBlZXISCgoCaXAYASABKAkSDAoEcG9y",
            "dBgCIAEoAxJFCgZsYWJlbHMYBiADKAsyNS5nb29nbGUucnBjLmNvbnRleHQu",
            "QXR0cmlidXRlQ29udGV4dC5QZWVyLkxhYmVsc0VudHJ5EhEKCXByaW5jaXBh",
            "bBgHIAEoCRITCgtyZWdpb25fY29kZRgIIAEoCRotCgtMYWJlbHNFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGkwKA0FwaRIPCgdzZXJ2",
            "aWNlGAEgASgJEhEKCW9wZXJhdGlvbhgCIAEoCRIQCghwcm90b2NvbBgDIAEo",
            "CRIPCgd2ZXJzaW9uGAQgASgJGn8KBEF1dGgSEQoJcHJpbmNpcGFsGAEgASgJ",
            "EhEKCWF1ZGllbmNlcxgCIAMoCRIRCglwcmVzZW50ZXIYAyABKAkSJwoGY2xh",
            "aW1zGAQgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIVCg1hY2Nlc3Nf",
            "bGV2ZWxzGAUgAygJGu8CCgdSZXF1ZXN0EgoKAmlkGAEgASgJEg4KBm1ldGhv",
            "ZBgCIAEoCRJKCgdoZWFkZXJzGAMgAygLMjkuZ29vZ2xlLnJwYy5jb250ZXh0",
            "LkF0dHJpYnV0ZUNvbnRleHQuUmVxdWVzdC5IZWFkZXJzRW50cnkSDAoEcGF0",
            "aBgEIAEoCRIMCgRob3N0GAUgASgJEg4KBnNjaGVtZRgGIAEoCRINCgVxdWVy",
            "eRgHIAEoCRIoCgR0aW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIMCgRzaXplGAogASgDEhAKCHByb3RvY29sGAsgASgJEg4KBnJlYXNv",
            "bhgMIAEoCRI3CgRhdXRoGA0gASgLMikuZ29vZ2xlLnJwYy5jb250ZXh0LkF0",
            "dHJpYnV0ZUNvbnRleHQuQXV0aBouCgxIZWFkZXJzRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4ARrNAQoIUmVzcG9uc2USDAoEY29kZRgB",
            "IAEoAxIMCgRzaXplGAIgASgDEksKB2hlYWRlcnMYAyADKAsyOi5nb29nbGUu",
            "cnBjLmNvbnRleHQuQXR0cmlidXRlQ29udGV4dC5SZXNwb25zZS5IZWFkZXJz",
            "RW50cnkSKAoEdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAaLgoMSGVhZGVyc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAEasQEKCFJlc291cmNlEg8KB3NlcnZpY2UYASABKAkSDAoEbmFtZRgC",
            "IAEoCRIMCgR0eXBlGAMgASgJEkkKBmxhYmVscxgEIAMoCzI5Lmdvb2dsZS5y",
            "cGMuY29udGV4dC5BdHRyaWJ1dGVDb250ZXh0LlJlc291cmNlLkxhYmVsc0Vu",
            "dHJ5Gi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAFCiwEKFmNvbS5nb29nbGUucnBjLmNvbnRleHRCFUF0dHJpYnV0ZUNv",
            "bnRleHRQcm90b1ABWlVnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29n",
            "bGVhcGlzL3JwYy9jb250ZXh0L2F0dHJpYnV0ZV9jb250ZXh0O2F0dHJpYnV0",
            "ZV9jb250ZXh0+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Rpc.Context.AttributeContext), global::Google.Rpc.Context.AttributeContext.Parser, new[]{ "Origin", "Source", "Destination", "Request", "Response", "Resource", "Api", "Extensions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Rpc.Context.AttributeContext.Types.Peer), global::Google.Rpc.Context.AttributeContext.Types.Peer.Parser, new[]{ "Ip", "Port", "Labels", "Principal", "RegionCode" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Rpc.Context.AttributeContext.Types.Api), global::Google.Rpc.Context.AttributeContext.Types.Api.Parser, new[]{ "Service", "Operation", "Protocol", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Rpc.Context.AttributeContext.Types.Auth), global::Google.Rpc.Context.AttributeContext.Types.Auth.Parser, new[]{ "Principal", "Audiences", "Presenter", "Claims", "AccessLevels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Rpc.Context.AttributeContext.Types.Request), global::Google.Rpc.Context.AttributeContext.Types.Request.Parser, new[]{ "Id", "Method", "Headers", "Path", "Host", "Scheme", "Query", "Time", "Size", "Protocol", "Reason", "Auth" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Rpc.Context.AttributeContext.Types.Response), global::Google.Rpc.Context.AttributeContext.Types.Response.Parser, new[]{ "Code", "Size", "Headers", "Time" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Rpc.Context.AttributeContext.Types.Resource), global::Google.Rpc.Context.AttributeContext.Types.Resource.Parser, new[]{ "Service", "Name", "Type", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// This message defines the standard attribute vocabulary for Google APIs.
  ///
  /// An attribute is a piece of metadata that describes an activity on a network
  /// service. For example, the size of an HTTP request, or the status code of
  /// an HTTP response.
  ///
  /// Each attribute has a type and a name, which is logically defined as
  /// a proto message field in `AttributeContext`. The field type becomes the
  /// attribute type, and the field path becomes the attribute name. For example,
  /// the attribute `source.ip` maps to field `AttributeContext.source.ip`.
  ///
  /// This message definition is guaranteed not to have any wire breaking change.
  /// So you can use it directly for passing attributes across different systems.
  ///
  /// NOTE: Different system may generate different subset of attributes. Please
  /// verify the system specification before relying on an attribute generated
  /// a system.
  /// </summary>
  public sealed partial class AttributeContext : pb::IMessage<AttributeContext>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttributeContext> _parser = new pb::MessageParser<AttributeContext>(() => new AttributeContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Rpc.Context.AttributeContextReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeContext(AttributeContext other) : this() {
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      source_ = other.source_ != null ? other.source_.Clone() : null;
      destination_ = other.destination_ != null ? other.destination_.Clone() : null;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      response_ = other.response_ != null ? other.response_.Clone() : null;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      api_ = other.api_ != null ? other.api_.Clone() : null;
      extensions_ = other.extensions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeContext Clone() {
      return new AttributeContext(this);
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 7;
    private global::Google.Rpc.Context.AttributeContext.Types.Peer origin_;
    /// <summary>
    /// The origin of a network activity. In a multi hop network activity,
    /// the origin represents the sender of the first hop. For the first hop,
    /// the `source` and the `origin` must have the same content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Context.AttributeContext.Types.Peer Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::Google.Rpc.Context.AttributeContext.Types.Peer source_;
    /// <summary>
    /// The source of a network activity, such as starting a TCP connection.
    /// In a multi hop network activity, the source represents the sender of the
    /// last hop.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Context.AttributeContext.Types.Peer Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 2;
    private global::Google.Rpc.Context.AttributeContext.Types.Peer destination_;
    /// <summary>
    /// The destination of a network activity, such as accepting a TCP connection.
    /// In a multi hop network activity, the destination represents the receiver of
    /// the last hop.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Context.AttributeContext.Types.Peer Destination {
      get { return destination_; }
      set {
        destination_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 3;
    private global::Google.Rpc.Context.AttributeContext.Types.Request request_;
    /// <summary>
    /// Represents a network request, such as an HTTP request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Context.AttributeContext.Types.Request Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 4;
    private global::Google.Rpc.Context.AttributeContext.Types.Response response_;
    /// <summary>
    /// Represents a network response, such as an HTTP response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Context.AttributeContext.Types.Response Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 5;
    private global::Google.Rpc.Context.AttributeContext.Types.Resource resource_;
    /// <summary>
    /// Represents a target resource that is involved with a network activity.
    /// If multiple resources are involved with an activity, this must be the
    /// primary one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Context.AttributeContext.Types.Resource Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 6;
    private global::Google.Rpc.Context.AttributeContext.Types.Api api_;
    /// <summary>
    /// Represents an API operation that is involved to a network activity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Context.AttributeContext.Types.Api Api {
      get { return api_; }
      set {
        api_ = value;
      }
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> extensions_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// Supports extensions for advanced use cases, such as logs and metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Extensions {
      get { return extensions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Destination, other.Destination)) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      if (!object.Equals(Api, other.Api)) return false;
      if(!extensions_.Equals(other.extensions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (destination_ != null) hash ^= Destination.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (api_ != null) hash ^= Api.GetHashCode();
      hash ^= extensions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (destination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Destination);
      }
      if (request_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Response);
      }
      if (resource_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Resource);
      }
      if (api_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Api);
      }
      if (origin_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Origin);
      }
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (destination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Destination);
      }
      if (request_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Response);
      }
      if (resource_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Resource);
      }
      if (api_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Api);
      }
      if (origin_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Origin);
      }
      extensions_.WriteTo(ref output, _repeated_extensions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (destination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Destination);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (api_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Api);
      }
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeContext other) {
      if (other == null) {
        return;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.destination_ != null) {
        if (destination_ == null) {
          Destination = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
        }
        Destination.MergeFrom(other.Destination);
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Google.Rpc.Context.AttributeContext.Types.Request();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::Google.Rpc.Context.AttributeContext.Types.Response();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Google.Rpc.Context.AttributeContext.Types.Resource();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.api_ != null) {
        if (api_ == null) {
          Api = new global::Google.Rpc.Context.AttributeContext.Types.Api();
        }
        Api.MergeFrom(other.Api);
      }
      extensions_.Add(other.extensions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (source_ == null) {
              Source = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
            }
            input.ReadMessage(Source);
            break;
          }
          case 18: {
            if (destination_ == null) {
              Destination = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
            }
            input.ReadMessage(Destination);
            break;
          }
          case 26: {
            if (request_ == null) {
              Request = new global::Google.Rpc.Context.AttributeContext.Types.Request();
            }
            input.ReadMessage(Request);
            break;
          }
          case 34: {
            if (response_ == null) {
              Response = new global::Google.Rpc.Context.AttributeContext.Types.Response();
            }
            input.ReadMessage(Response);
            break;
          }
          case 42: {
            if (resource_ == null) {
              Resource = new global::Google.Rpc.Context.AttributeContext.Types.Resource();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 50: {
            if (api_ == null) {
              Api = new global::Google.Rpc.Context.AttributeContext.Types.Api();
            }
            input.ReadMessage(Api);
            break;
          }
          case 58: {
            if (origin_ == null) {
              Origin = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 66: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (source_ == null) {
              Source = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
            }
            input.ReadMessage(Source);
            break;
          }
          case 18: {
            if (destination_ == null) {
              Destination = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
            }
            input.ReadMessage(Destination);
            break;
          }
          case 26: {
            if (request_ == null) {
              Request = new global::Google.Rpc.Context.AttributeContext.Types.Request();
            }
            input.ReadMessage(Request);
            break;
          }
          case 34: {
            if (response_ == null) {
              Response = new global::Google.Rpc.Context.AttributeContext.Types.Response();
            }
            input.ReadMessage(Response);
            break;
          }
          case 42: {
            if (resource_ == null) {
              Resource = new global::Google.Rpc.Context.AttributeContext.Types.Resource();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 50: {
            if (api_ == null) {
              Api = new global::Google.Rpc.Context.AttributeContext.Types.Api();
            }
            input.ReadMessage(Api);
            break;
          }
          case 58: {
            if (origin_ == null) {
              Origin = new global::Google.Rpc.Context.AttributeContext.Types.Peer();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 66: {
            extensions_.AddEntriesFrom(ref input, _repeated_extensions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AttributeContext message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// This message defines attributes for a node that handles a network request.
      /// The node can be either a service or an application that sends, forwards,
      /// or receives the request. Service peers should fill in
      /// `principal` and `labels` as appropriate.
      /// </summary>
      public sealed partial class Peer : pb::IMessage<Peer>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Peer> _parser = new pb::MessageParser<Peer>(() => new Peer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Peer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Rpc.Context.AttributeContext.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Peer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Peer(Peer other) : this() {
          ip_ = other.ip_;
          port_ = other.port_;
          labels_ = other.labels_.Clone();
          principal_ = other.principal_;
          regionCode_ = other.regionCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Peer Clone() {
          return new Peer(this);
        }

        /// <summary>Field number for the "ip" field.</summary>
        public const int IpFieldNumber = 1;
        private string ip_ = "";
        /// <summary>
        /// The IP address of the peer.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Ip {
          get { return ip_; }
          set {
            ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 2;
        private long port_;
        /// <summary>
        /// The network port of the peer.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        /// <summary>Field number for the "labels" field.</summary>
        public const int LabelsFieldNumber = 6;
        private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
        private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
        /// <summary>
        /// The labels associated with the peer.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> Labels {
          get { return labels_; }
        }

        /// <summary>Field number for the "principal" field.</summary>
        public const int PrincipalFieldNumber = 7;
        private string principal_ = "";
        /// <summary>
        /// The identity of this peer. Similar to `Request.auth.principal`, but
        /// relative to the peer instead of the request. For example, the
        /// idenity associated with a load balancer that forwared the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Principal {
          get { return principal_; }
          set {
            principal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "region_code" field.</summary>
        public const int RegionCodeFieldNumber = 8;
        private string regionCode_ = "";
        /// <summary>
        /// The CLDR country/region code associated with the above IP address.
        /// If the IP address is private, the `region_code` should reflect the
        /// physical location where this peer is running.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RegionCode {
          get { return regionCode_; }
          set {
            regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Peer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Peer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Ip != other.Ip) return false;
          if (Port != other.Port) return false;
          if (!Labels.Equals(other.Labels)) return false;
          if (Principal != other.Principal) return false;
          if (RegionCode != other.RegionCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Ip.Length != 0) hash ^= Ip.GetHashCode();
          if (Port != 0L) hash ^= Port.GetHashCode();
          hash ^= Labels.GetHashCode();
          if (Principal.Length != 0) hash ^= Principal.GetHashCode();
          if (RegionCode.Length != 0) hash ^= RegionCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Ip.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Ip);
          }
          if (Port != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Port);
          }
          labels_.WriteTo(output, _map_labels_codec);
          if (Principal.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Principal);
          }
          if (RegionCode.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(RegionCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Ip.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Ip);
          }
          if (Port != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Port);
          }
          labels_.WriteTo(ref output, _map_labels_codec);
          if (Principal.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Principal);
          }
          if (RegionCode.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(RegionCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Ip.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
          }
          if (Port != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Port);
          }
          size += labels_.CalculateSize(_map_labels_codec);
          if (Principal.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Principal);
          }
          if (RegionCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Peer other) {
          if (other == null) {
            return;
          }
          if (other.Ip.Length != 0) {
            Ip = other.Ip;
          }
          if (other.Port != 0L) {
            Port = other.Port;
          }
          labels_.Add(other.labels_);
          if (other.Principal.Length != 0) {
            Principal = other.Principal;
          }
          if (other.RegionCode.Length != 0) {
            RegionCode = other.RegionCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Ip = input.ReadString();
                break;
              }
              case 16: {
                Port = input.ReadInt64();
                break;
              }
              case 50: {
                labels_.AddEntriesFrom(input, _map_labels_codec);
                break;
              }
              case 58: {
                Principal = input.ReadString();
                break;
              }
              case 66: {
                RegionCode = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Ip = input.ReadString();
                break;
              }
              case 16: {
                Port = input.ReadInt64();
                break;
              }
              case 50: {
                labels_.AddEntriesFrom(ref input, _map_labels_codec);
                break;
              }
              case 58: {
                Principal = input.ReadString();
                break;
              }
              case 66: {
                RegionCode = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// This message defines attributes associated with API operations, such as
      /// a network API request. The terminology is based on the conventions used
      /// by Google APIs, Istio, and OpenAPI.
      /// </summary>
      public sealed partial class Api : pb::IMessage<Api>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Api> _parser = new pb::MessageParser<Api>(() => new Api());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Api> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Rpc.Context.AttributeContext.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Api() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Api(Api other) : this() {
          service_ = other.service_;
          operation_ = other.operation_;
          protocol_ = other.protocol_;
          version_ = other.version_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Api Clone() {
          return new Api(this);
        }

        /// <summary>Field number for the "service" field.</summary>
        public const int ServiceFieldNumber = 1;
        private string service_ = "";
        /// <summary>
        /// The API service name. It is a logical identifier for a networked API,
        /// such as "pubsub.googleapis.com". The naming syntax depends on the
        /// API management system being used for handling the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Service {
          get { return service_; }
          set {
            service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "operation" field.</summary>
        public const int OperationFieldNumber = 2;
        private string operation_ = "";
        /// <summary>
        /// The API operation name. For gRPC requests, it is the fully qualified API
        /// method name, such as "google.pubsub.v1.Publisher.Publish". For OpenAPI
        /// requests, it is the `operationId`, such as "getPet".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Operation {
          get { return operation_; }
          set {
            operation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "protocol" field.</summary>
        public const int ProtocolFieldNumber = 3;
        private string protocol_ = "";
        /// <summary>
        /// The API protocol used for sending the request, such as "http", "https",
        /// "grpc", or "internal".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Protocol {
          get { return protocol_; }
          set {
            protocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 4;
        private string version_ = "";
        /// <summary>
        /// The API version associated with the API operation above, such as "v1" or
        /// "v1alpha1".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Version {
          get { return version_; }
          set {
            version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Api);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Api other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Service != other.Service) return false;
          if (Operation != other.Operation) return false;
          if (Protocol != other.Protocol) return false;
          if (Version != other.Version) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Service.Length != 0) hash ^= Service.GetHashCode();
          if (Operation.Length != 0) hash ^= Operation.GetHashCode();
          if (Protocol.Length != 0) hash ^= Protocol.GetHashCode();
          if (Version.Length != 0) hash ^= Version.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Service.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Service);
          }
          if (Operation.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Operation);
          }
          if (Protocol.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Protocol);
          }
          if (Version.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Service.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Service);
          }
          if (Operation.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Operation);
          }
          if (Protocol.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Protocol);
          }
          if (Version.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Service.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
          }
          if (Operation.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Operation);
          }
          if (Protocol.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Protocol);
          }
          if (Version.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Api other) {
          if (other == null) {
            return;
          }
          if (other.Service.Length != 0) {
            Service = other.Service;
          }
          if (other.Operation.Length != 0) {
            Operation = other.Operation;
          }
          if (other.Protocol.Length != 0) {
            Protocol = other.Protocol;
          }
          if (other.Version.Length != 0) {
            Version = other.Version;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Service = input.ReadString();
                break;
              }
              case 18: {
                Operation = input.ReadString();
                break;
              }
              case 26: {
                Protocol = input.ReadString();
                break;
              }
              case 34: {
                Version = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Service = input.ReadString();
                break;
              }
              case 18: {
                Operation = input.ReadString();
                break;
              }
              case 26: {
                Protocol = input.ReadString();
                break;
              }
              case 34: {
                Version = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// This message defines request authentication attributes. Terminology is
      /// based on the JSON Web Token (JWT) standard, but the terms also
      /// correlate to concepts in other standards.
      /// </summary>
      public sealed partial class Auth : pb::IMessage<Auth>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Auth> _parser = new pb::MessageParser<Auth>(() => new Auth());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Auth> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Rpc.Context.AttributeContext.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Auth() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Auth(Auth other) : this() {
          principal_ = other.principal_;
          audiences_ = other.audiences_.Clone();
          presenter_ = other.presenter_;
          claims_ = other.claims_ != null ? other.claims_.Clone() : null;
          accessLevels_ = other.accessLevels_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Auth Clone() {
          return new Auth(this);
        }

        /// <summary>Field number for the "principal" field.</summary>
        public const int PrincipalFieldNumber = 1;
        private string principal_ = "";
        /// <summary>
        /// The authenticated principal. Reflects the issuer (`iss`) and subject
        /// (`sub`) claims within a JWT. The issuer and subject should be `/`
        /// delimited, with `/` percent-encoded within the subject fragment. For
        /// Google accounts, the principal format is:
        /// "https://accounts.google.com/{id}"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Principal {
          get { return principal_; }
          set {
            principal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "audiences" field.</summary>
        public const int AudiencesFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_audiences_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> audiences_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// The intended audience(s) for this authentication information. Reflects
        /// the audience (`aud`) claim within a JWT. The audience
        /// value(s) depends on the `issuer`, but typically include one or more of
        /// the following pieces of information:
        ///
        /// *  The services intended to receive the credential. For example,
        ///    ["https://pubsub.googleapis.com/", "https://storage.googleapis.com/"].
        /// *  A set of service-based scopes. For example,
        ///    ["https://www.googleapis.com/auth/cloud-platform"].
        /// *  The client id of an app, such as the Firebase project id for JWTs
        ///    from Firebase Auth.
        ///
        /// Consult the documentation for the credential issuer to determine the
        /// information provided.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Audiences {
          get { return audiences_; }
        }

        /// <summary>Field number for the "presenter" field.</summary>
        public const int PresenterFieldNumber = 3;
        private string presenter_ = "";
        /// <summary>
        /// The authorized presenter of the credential. Reflects the optional
        /// Authorized Presenter (`azp`) claim within a JWT or the
        /// OAuth client id. For example, a Google Cloud Platform client id looks
        /// as follows: "123456789012.apps.googleusercontent.com".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Presenter {
          get { return presenter_; }
          set {
            presenter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "claims" field.</summary>
        public const int ClaimsFieldNumber = 4;
        private global::Google.Protobuf.WellKnownTypes.Struct claims_;
        /// <summary>
        /// Structured claims presented with the credential. JWTs include
        /// `{key: value}` pairs for standard and private claims. The following
        /// is a subset of the standard required and optional claims that would
        /// typically be presented for a Google-based JWT:
        ///
        ///    {'iss': 'accounts.google.com',
        ///     'sub': '113289723416554971153',
        ///     'aud': ['123456789012', 'pubsub.googleapis.com'],
        ///     'azp': '123456789012.apps.googleusercontent.com',
        ///     'email': 'jsmith@example.com',
        ///     'iat': 1353601026,
        ///     'exp': 1353604926}
        ///
        /// SAML assertions are similarly specified, but with an identity provider
        /// dependent structure.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Struct Claims {
          get { return claims_; }
          set {
            claims_ = value;
          }
        }

        /// <summary>Field number for the "access_levels" field.</summary>
        public const int AccessLevelsFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _repeated_accessLevels_codec
            = pb::FieldCodec.ForString(42);
        private readonly pbc::RepeatedField<string> accessLevels_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of access level resource names that allow resources to be
        /// accessed by authenticated requester. It is part of Secure GCP processing
        /// for the incoming request. An access level string has the format:
        /// "//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}"
        ///
        /// Example:
        /// "//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> AccessLevels {
          get { return accessLevels_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Auth);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Auth other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Principal != other.Principal) return false;
          if(!audiences_.Equals(other.audiences_)) return false;
          if (Presenter != other.Presenter) return false;
          if (!object.Equals(Claims, other.Claims)) return false;
          if(!accessLevels_.Equals(other.accessLevels_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Principal.Length != 0) hash ^= Principal.GetHashCode();
          hash ^= audiences_.GetHashCode();
          if (Presenter.Length != 0) hash ^= Presenter.GetHashCode();
          if (claims_ != null) hash ^= Claims.GetHashCode();
          hash ^= accessLevels_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Principal.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Principal);
          }
          audiences_.WriteTo(output, _repeated_audiences_codec);
          if (Presenter.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Presenter);
          }
          if (claims_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Claims);
          }
          accessLevels_.WriteTo(output, _repeated_accessLevels_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Principal.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Principal);
          }
          audiences_.WriteTo(ref output, _repeated_audiences_codec);
          if (Presenter.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Presenter);
          }
          if (claims_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Claims);
          }
          accessLevels_.WriteTo(ref output, _repeated_accessLevels_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Principal.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Principal);
          }
          size += audiences_.CalculateSize(_repeated_audiences_codec);
          if (Presenter.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Presenter);
          }
          if (claims_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Claims);
          }
          size += accessLevels_.CalculateSize(_repeated_accessLevels_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Auth other) {
          if (other == null) {
            return;
          }
          if (other.Principal.Length != 0) {
            Principal = other.Principal;
          }
          audiences_.Add(other.audiences_);
          if (other.Presenter.Length != 0) {
            Presenter = other.Presenter;
          }
          if (other.claims_ != null) {
            if (claims_ == null) {
              Claims = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            Claims.MergeFrom(other.Claims);
          }
          accessLevels_.Add(other.accessLevels_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Principal = input.ReadString();
                break;
              }
              case 18: {
                audiences_.AddEntriesFrom(input, _repeated_audiences_codec);
                break;
              }
              case 26: {
                Presenter = input.ReadString();
                break;
              }
              case 34: {
                if (claims_ == null) {
                  Claims = new global::Google.Protobuf.WellKnownTypes.Struct();
                }
                input.ReadMessage(Claims);
                break;
              }
              case 42: {
                accessLevels_.AddEntriesFrom(input, _repeated_accessLevels_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Principal = input.ReadString();
                break;
              }
              case 18: {
                audiences_.AddEntriesFrom(ref input, _repeated_audiences_codec);
                break;
              }
              case 26: {
                Presenter = input.ReadString();
                break;
              }
              case 34: {
                if (claims_ == null) {
                  Claims = new global::Google.Protobuf.WellKnownTypes.Struct();
                }
                input.ReadMessage(Claims);
                break;
              }
              case 42: {
                accessLevels_.AddEntriesFrom(ref input, _repeated_accessLevels_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// This message defines attributes for an HTTP request. If the actual
      /// request is not an HTTP request, the runtime system should try to map
      /// the actual request to an equivalent HTTP request.
      /// </summary>
      public sealed partial class Request : pb::IMessage<Request>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Rpc.Context.AttributeContext.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          id_ = other.id_;
          method_ = other.method_;
          headers_ = other.headers_.Clone();
          path_ = other.path_;
          host_ = other.host_;
          scheme_ = other.scheme_;
          query_ = other.query_;
          time_ = other.time_ != null ? other.time_.Clone() : null;
          size_ = other.size_;
          protocol_ = other.protocol_;
          reason_ = other.reason_;
          auth_ = other.auth_ != null ? other.auth_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        /// <summary>
        /// The unique ID for a request, which can be propagated to downstream
        /// systems. The ID should have low probability of collision
        /// within a single day for a specific service.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "method" field.</summary>
        public const int MethodFieldNumber = 2;
        private string method_ = "";
        /// <summary>
        /// The HTTP request method, such as `GET`, `POST`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Method {
          get { return method_; }
          set {
            method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "headers" field.</summary>
        public const int HeadersFieldNumber = 3;
        private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
        private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
        /// <summary>
        /// The HTTP request headers. If multiple headers share the same key, they
        /// must be merged according to the HTTP spec. All header keys must be
        /// lowercased, because HTTP header keys are case-insensitive.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> Headers {
          get { return headers_; }
        }

        /// <summary>Field number for the "path" field.</summary>
        public const int PathFieldNumber = 4;
        private string path_ = "";
        /// <summary>
        /// The HTTP URL path.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Path {
          get { return path_; }
          set {
            path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 5;
        private string host_ = "";
        /// <summary>
        /// The HTTP request `Host` header value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Host {
          get { return host_; }
          set {
            host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "scheme" field.</summary>
        public const int SchemeFieldNumber = 6;
        private string scheme_ = "";
        /// <summary>
        /// The HTTP URL scheme, such as `http` and `https`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Scheme {
          get { return scheme_; }
          set {
            scheme_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "query" field.</summary>
        public const int QueryFieldNumber = 7;
        private string query_ = "";
        /// <summary>
        /// The HTTP URL query in the format of `name1=value1&amp;name2=value2`, as it
        /// appears in the first line of the HTTP request. No decoding is performed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Query {
          get { return query_; }
          set {
            query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "time" field.</summary>
        public const int TimeFieldNumber = 9;
        private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
        /// <summary>
        /// The timestamp when the `destination` service receives the first byte of
        /// the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
          get { return time_; }
          set {
            time_ = value;
          }
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 10;
        private long size_;
        /// <summary>
        /// The HTTP request size in bytes. If unknown, it must be -1.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        /// <summary>Field number for the "protocol" field.</summary>
        public const int ProtocolFieldNumber = 11;
        private string protocol_ = "";
        /// <summary>
        /// The network protocol used with the request, such as "http/1.1",
        /// "spdy/3", "h2", "h2c", "webrtc", "tcp", "udp", "quic". See
        /// https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
        /// for details.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Protocol {
          get { return protocol_; }
          set {
            protocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "reason" field.</summary>
        public const int ReasonFieldNumber = 12;
        private string reason_ = "";
        /// <summary>
        /// A special parameter for request reason. It is used by security systems
        /// to associate auditing information with a request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Reason {
          get { return reason_; }
          set {
            reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "auth" field.</summary>
        public const int AuthFieldNumber = 13;
        private global::Google.Rpc.Context.AttributeContext.Types.Auth auth_;
        /// <summary>
        /// The request authentication. May be absent for unauthenticated requests.
        /// Derived from the HTTP request `Authorization` header or equivalent.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Rpc.Context.AttributeContext.Types.Auth Auth {
          get { return auth_; }
          set {
            auth_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Method != other.Method) return false;
          if (!Headers.Equals(other.Headers)) return false;
          if (Path != other.Path) return false;
          if (Host != other.Host) return false;
          if (Scheme != other.Scheme) return false;
          if (Query != other.Query) return false;
          if (!object.Equals(Time, other.Time)) return false;
          if (Size != other.Size) return false;
          if (Protocol != other.Protocol) return false;
          if (Reason != other.Reason) return false;
          if (!object.Equals(Auth, other.Auth)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Method.Length != 0) hash ^= Method.GetHashCode();
          hash ^= Headers.GetHashCode();
          if (Path.Length != 0) hash ^= Path.GetHashCode();
          if (Host.Length != 0) hash ^= Host.GetHashCode();
          if (Scheme.Length != 0) hash ^= Scheme.GetHashCode();
          if (Query.Length != 0) hash ^= Query.GetHashCode();
          if (time_ != null) hash ^= Time.GetHashCode();
          if (Size != 0L) hash ^= Size.GetHashCode();
          if (Protocol.Length != 0) hash ^= Protocol.GetHashCode();
          if (Reason.Length != 0) hash ^= Reason.GetHashCode();
          if (auth_ != null) hash ^= Auth.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Method.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Method);
          }
          headers_.WriteTo(output, _map_headers_codec);
          if (Path.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Path);
          }
          if (Host.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Host);
          }
          if (Scheme.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Scheme);
          }
          if (Query.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Query);
          }
          if (time_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(Time);
          }
          if (Size != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(Size);
          }
          if (Protocol.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Protocol);
          }
          if (Reason.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Reason);
          }
          if (auth_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(Auth);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Method.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Method);
          }
          headers_.WriteTo(ref output, _map_headers_codec);
          if (Path.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Path);
          }
          if (Host.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Host);
          }
          if (Scheme.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Scheme);
          }
          if (Query.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Query);
          }
          if (time_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(Time);
          }
          if (Size != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(Size);
          }
          if (Protocol.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Protocol);
          }
          if (Reason.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Reason);
          }
          if (auth_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(Auth);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Method.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
          }
          size += headers_.CalculateSize(_map_headers_codec);
          if (Path.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
          }
          if (Host.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
          }
          if (Scheme.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Scheme);
          }
          if (Query.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
          }
          if (time_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
          }
          if (Size != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
          }
          if (Protocol.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Protocol);
          }
          if (Reason.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
          }
          if (auth_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Method.Length != 0) {
            Method = other.Method;
          }
          headers_.Add(other.headers_);
          if (other.Path.Length != 0) {
            Path = other.Path;
          }
          if (other.Host.Length != 0) {
            Host = other.Host;
          }
          if (other.Scheme.Length != 0) {
            Scheme = other.Scheme;
          }
          if (other.Query.Length != 0) {
            Query = other.Query;
          }
          if (other.time_ != null) {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            Time.MergeFrom(other.Time);
          }
          if (other.Size != 0L) {
            Size = other.Size;
          }
          if (other.Protocol.Length != 0) {
            Protocol = other.Protocol;
          }
          if (other.Reason.Length != 0) {
            Reason = other.Reason;
          }
          if (other.auth_ != null) {
            if (auth_ == null) {
              Auth = new global::Google.Rpc.Context.AttributeContext.Types.Auth();
            }
            Auth.MergeFrom(other.Auth);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Method = input.ReadString();
                break;
              }
              case 26: {
                headers_.AddEntriesFrom(input, _map_headers_codec);
                break;
              }
              case 34: {
                Path = input.ReadString();
                break;
              }
              case 42: {
                Host = input.ReadString();
                break;
              }
              case 50: {
                Scheme = input.ReadString();
                break;
              }
              case 58: {
                Query = input.ReadString();
                break;
              }
              case 74: {
                if (time_ == null) {
                  Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Time);
                break;
              }
              case 80: {
                Size = input.ReadInt64();
                break;
              }
              case 90: {
                Protocol = input.ReadString();
                break;
              }
              case 98: {
                Reason = input.ReadString();
                break;
              }
              case 106: {
                if (auth_ == null) {
                  Auth = new global::Google.Rpc.Context.AttributeContext.Types.Auth();
                }
                input.ReadMessage(Auth);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Method = input.ReadString();
                break;
              }
              case 26: {
                headers_.AddEntriesFrom(ref input, _map_headers_codec);
                break;
              }
              case 34: {
                Path = input.ReadString();
                break;
              }
              case 42: {
                Host = input.ReadString();
                break;
              }
              case 50: {
                Scheme = input.ReadString();
                break;
              }
              case 58: {
                Query = input.ReadString();
                break;
              }
              case 74: {
                if (time_ == null) {
                  Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Time);
                break;
              }
              case 80: {
                Size = input.ReadInt64();
                break;
              }
              case 90: {
                Protocol = input.ReadString();
                break;
              }
              case 98: {
                Reason = input.ReadString();
                break;
              }
              case 106: {
                if (auth_ == null) {
                  Auth = new global::Google.Rpc.Context.AttributeContext.Types.Auth();
                }
                input.ReadMessage(Auth);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// This message defines attributes for a typical network response. It
      /// generally models semantics of an HTTP response.
      /// </summary>
      public sealed partial class Response : pb::IMessage<Response>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Rpc.Context.AttributeContext.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          code_ = other.code_;
          size_ = other.size_;
          headers_ = other.headers_.Clone();
          time_ = other.time_ != null ? other.time_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private long code_;
        /// <summary>
        /// The HTTP response status code, such as `200` and `404`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 2;
        private long size_;
        /// <summary>
        /// The HTTP response size in bytes. If unknown, it must be -1.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        /// <summary>Field number for the "headers" field.</summary>
        public const int HeadersFieldNumber = 3;
        private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
        private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
        /// <summary>
        /// The HTTP response headers. If multiple headers share the same key, they
        /// must be merged according to HTTP spec. All header keys must be
        /// lowercased, because HTTP header keys are case-insensitive.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> Headers {
          get { return headers_; }
        }

        /// <summary>Field number for the "time" field.</summary>
        public const int TimeFieldNumber = 4;
        private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
        /// <summary>
        /// The timestamp when the `destination` service generates the first byte of
        /// the response.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
          get { return time_; }
          set {
            time_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (Size != other.Size) return false;
          if (!Headers.Equals(other.Headers)) return false;
          if (!object.Equals(Time, other.Time)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != 0L) hash ^= Code.GetHashCode();
          if (Size != 0L) hash ^= Size.GetHashCode();
          hash ^= Headers.GetHashCode();
          if (time_ != null) hash ^= Time.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Code != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Code);
          }
          if (Size != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Size);
          }
          headers_.WriteTo(output, _map_headers_codec);
          if (time_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Time);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Code != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Code);
          }
          if (Size != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Size);
          }
          headers_.WriteTo(ref output, _map_headers_codec);
          if (time_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Time);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Code != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Code);
          }
          if (Size != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
          }
          size += headers_.CalculateSize(_map_headers_codec);
          if (time_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Code != 0L) {
            Code = other.Code;
          }
          if (other.Size != 0L) {
            Size = other.Size;
          }
          headers_.Add(other.headers_);
          if (other.time_ != null) {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            Time.MergeFrom(other.Time);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = input.ReadInt64();
                break;
              }
              case 16: {
                Size = input.ReadInt64();
                break;
              }
              case 26: {
                headers_.AddEntriesFrom(input, _map_headers_codec);
                break;
              }
              case 34: {
                if (time_ == null) {
                  Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Time);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Code = input.ReadInt64();
                break;
              }
              case 16: {
                Size = input.ReadInt64();
                break;
              }
              case 26: {
                headers_.AddEntriesFrom(ref input, _map_headers_codec);
                break;
              }
              case 34: {
                if (time_ == null) {
                  Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Time);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// This message defines core attributes for a resource. A resource is an
      /// addressable (named) entity provided by the destination service. For
      /// example, a file stored on a network storage service.
      /// </summary>
      public sealed partial class Resource : pb::IMessage<Resource>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Resource> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Rpc.Context.AttributeContext.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Resource() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Resource(Resource other) : this() {
          service_ = other.service_;
          name_ = other.name_;
          type_ = other.type_;
          labels_ = other.labels_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Resource Clone() {
          return new Resource(this);
        }

        /// <summary>Field number for the "service" field.</summary>
        public const int ServiceFieldNumber = 1;
        private string service_ = "";
        /// <summary>
        /// The name of the service that this resource belongs to, such as
        /// `pubsub.googleapis.com`. The service may be different from the DNS
        /// hostname that actually serves the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Service {
          get { return service_; }
          set {
            service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// The stable identifier (name) of a resource on the `service`. A resource
        /// can be logically identified as "//{resource.service}/{resource.name}".
        /// The differences between a resource name and a URI are:
        ///
        /// *   Resource name is a logical identifier, independent of network
        ///     protocol and API version. For example,
        ///     `//pubsub.googleapis.com/projects/123/topics/news-feed`.
        /// *   URI often includes protocol and version information, so it can
        ///     be used directly by applications. For example,
        ///     `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`.
        ///
        /// See https://cloud.google.com/apis/design/resource_names for details.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 3;
        private string type_ = "";
        /// <summary>
        /// The type of the resource. The syntax is platform-specific because
        /// different platforms define their resources differently.
        ///
        /// For Google APIs, the type format must be "{service}/{kind}".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "labels" field.</summary>
        public const int LabelsFieldNumber = 4;
        private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
        private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
        /// <summary>
        /// The labels or tags on the resource, such as AWS resource tags and
        /// Kubernetes resource labels.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> Labels {
          get { return labels_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Resource);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Resource other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Service != other.Service) return false;
          if (Name != other.Name) return false;
          if (Type != other.Type) return false;
          if (!Labels.Equals(other.Labels)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Service.Length != 0) hash ^= Service.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          hash ^= Labels.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Service.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Service);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Type);
          }
          labels_.WriteTo(output, _map_labels_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Service.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Service);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Type);
          }
          labels_.WriteTo(ref output, _map_labels_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Service.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          size += labels_.CalculateSize(_map_labels_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Resource other) {
          if (other == null) {
            return;
          }
          if (other.Service.Length != 0) {
            Service = other.Service;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          labels_.Add(other.labels_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Service = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Type = input.ReadString();
                break;
              }
              case 34: {
                labels_.AddEntriesFrom(input, _map_labels_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Service = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Type = input.ReadString();
                break;
              }
              case 34: {
                labels_.AddEntriesFrom(ref input, _map_labels_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
