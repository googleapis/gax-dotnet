/*
 * Copyright 2020 Google LLC All Rights Reserved.
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file or at
 * https://developers.google.com/open-source/licenses/bsd
 */

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/api/backend.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Api {

  /// <summary>Holder for reflection information generated from google/api/backend.proto</summary>
  public static partial class BackendReflection {

    #region Descriptor
    /// <summary>File descriptor for google/api/backend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BackendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhnb29nbGUvYXBpL2JhY2tlbmQucHJvdG8SCmdvb2dsZS5hcGkiMQoHQmFj",
            "a2VuZBImCgVydWxlcxgBIAMoCzIXLmdvb2dsZS5hcGkuQmFja2VuZFJ1bGUi",
            "8gIKC0JhY2tlbmRSdWxlEhAKCHNlbGVjdG9yGAEgASgJEg8KB2FkZHJlc3MY",
            "AiABKAkSEAoIZGVhZGxpbmUYAyABKAESFAoMbWluX2RlYWRsaW5lGAQgASgB",
            "EhoKEm9wZXJhdGlvbl9kZWFkbGluZRgFIAEoARJBChBwYXRoX3RyYW5zbGF0",
            "aW9uGAYgASgOMicuZ29vZ2xlLmFwaS5CYWNrZW5kUnVsZS5QYXRoVHJhbnNs",
            "YXRpb24SFgoMand0X2F1ZGllbmNlGAcgASgJSAASFgoMZGlzYWJsZV9hdXRo",
            "GAggASgISAASEAoIcHJvdG9jb2wYCSABKAkiZQoPUGF0aFRyYW5zbGF0aW9u",
            "EiAKHFBBVEhfVFJBTlNMQVRJT05fVU5TUEVDSUZJRUQQABIUChBDT05TVEFO",
            "VF9BRERSRVNTEAESGgoWQVBQRU5EX1BBVEhfVE9fQUREUkVTUxACQhAKDmF1",
            "dGhlbnRpY2F0aW9uQm4KDmNvbS5nb29nbGUuYXBpQgxCYWNrZW5kUHJvdG9Q",
            "AVpFZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hcGkv",
            "c2VydmljZWNvbmZpZztzZXJ2aWNlY29uZmlnogIER0FQSWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Api.Backend), global::Google.Api.Backend.Parser, new[]{ "Rules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Api.BackendRule), global::Google.Api.BackendRule.Parser, new[]{ "Selector", "Address", "Deadline", "MinDeadline", "OperationDeadline", "PathTranslation", "JwtAudience", "DisableAuth", "Protocol" }, new[]{ "Authentication" }, new[]{ typeof(global::Google.Api.BackendRule.Types.PathTranslation) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// `Backend` defines the backend configuration for a service.
  /// </summary>
  public sealed partial class Backend : pb::IMessage<Backend>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Backend> _parser = new pb::MessageParser<Backend>(() => new Backend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Backend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Api.BackendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backend(Backend other) : this() {
      rules_ = other.rules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backend Clone() {
      return new Backend(this);
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Api.BackendRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Api.BackendRule.Parser);
    private readonly pbc::RepeatedField<global::Google.Api.BackendRule> rules_ = new pbc::RepeatedField<global::Google.Api.BackendRule>();
    /// <summary>
    /// A list of API backend rules that apply to individual API methods.
    ///
    /// **NOTE:** All service configuration rules follow "last one wins" order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Api.BackendRule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Backend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Backend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rules_.Equals(other.rules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rules_.WriteTo(output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rules_.WriteTo(ref output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Backend other) {
      if (other == null) {
        return;
      }
      rules_.Add(other.rules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A backend rule provides configuration for an individual API element.
  /// </summary>
  public sealed partial class BackendRule : pb::IMessage<BackendRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BackendRule> _parser = new pb::MessageParser<BackendRule>(() => new BackendRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackendRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Api.BackendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendRule(BackendRule other) : this() {
      selector_ = other.selector_;
      address_ = other.address_;
      deadline_ = other.deadline_;
      minDeadline_ = other.minDeadline_;
      operationDeadline_ = other.operationDeadline_;
      pathTranslation_ = other.pathTranslation_;
      protocol_ = other.protocol_;
      switch (other.AuthenticationCase) {
        case AuthenticationOneofCase.JwtAudience:
          JwtAudience = other.JwtAudience;
          break;
        case AuthenticationOneofCase.DisableAuth:
          DisableAuth = other.DisableAuth;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackendRule Clone() {
      return new BackendRule(this);
    }

    /// <summary>Field number for the "selector" field.</summary>
    public const int SelectorFieldNumber = 1;
    private string selector_ = "";
    /// <summary>
    /// Selects the methods to which this rule applies.
    ///
    /// Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Selector {
      get { return selector_; }
      set {
        selector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private string address_ = "";
    /// <summary>
    /// The address of the API backend.
    ///
    /// The scheme is used to determine the backend protocol and security.
    /// The following schemes are accepted:
    ///
    ///    SCHEME        PROTOCOL    SECURITY
    ///    http://       HTTP        None
    ///    https://      HTTP        TLS
    ///    grpc://       gRPC        None
    ///    grpcs://      gRPC        TLS
    ///
    /// It is recommended to explicitly include a scheme. Leaving out the scheme
    /// may cause constrasting behaviors across platforms.
    ///
    /// If the port is unspecified, the default is:
    /// - 80 for schemes without TLS
    /// - 443 for schemes with TLS
    ///
    /// For HTTP backends, use [protocol][google.api.BackendRule.protocol]
    /// to specify the protocol version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deadline" field.</summary>
    public const int DeadlineFieldNumber = 3;
    private double deadline_;
    /// <summary>
    /// The number of seconds to wait for a response from a request. The default
    /// varies based on the request protocol and deployment environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Deadline {
      get { return deadline_; }
      set {
        deadline_ = value;
      }
    }

    /// <summary>Field number for the "min_deadline" field.</summary>
    public const int MinDeadlineFieldNumber = 4;
    private double minDeadline_;
    /// <summary>
    /// Minimum deadline in seconds needed for this method. Calls having deadline
    /// value lower than this will be rejected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MinDeadline {
      get { return minDeadline_; }
      set {
        minDeadline_ = value;
      }
    }

    /// <summary>Field number for the "operation_deadline" field.</summary>
    public const int OperationDeadlineFieldNumber = 5;
    private double operationDeadline_;
    /// <summary>
    /// The number of seconds to wait for the completion of a long running
    /// operation. The default is no deadline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double OperationDeadline {
      get { return operationDeadline_; }
      set {
        operationDeadline_ = value;
      }
    }

    /// <summary>Field number for the "path_translation" field.</summary>
    public const int PathTranslationFieldNumber = 6;
    private global::Google.Api.BackendRule.Types.PathTranslation pathTranslation_ = global::Google.Api.BackendRule.Types.PathTranslation.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Api.BackendRule.Types.PathTranslation PathTranslation {
      get { return pathTranslation_; }
      set {
        pathTranslation_ = value;
      }
    }

    /// <summary>Field number for the "jwt_audience" field.</summary>
    public const int JwtAudienceFieldNumber = 7;
    /// <summary>
    /// The JWT audience is used when generating a JWT ID token for the backend.
    /// This ID token will be added in the HTTP "authorization" header, and sent
    /// to the backend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JwtAudience {
      get { return authenticationCase_ == AuthenticationOneofCase.JwtAudience ? (string) authentication_ : ""; }
      set {
        authentication_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        authenticationCase_ = AuthenticationOneofCase.JwtAudience;
      }
    }

    /// <summary>Field number for the "disable_auth" field.</summary>
    public const int DisableAuthFieldNumber = 8;
    /// <summary>
    /// When disable_auth is true, a JWT ID token won't be generated and the
    /// original "Authorization" HTTP header will be preserved. If the header is
    /// used to carry the original token and is expected by the backend, this
    /// field must be set to true to preserve the header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DisableAuth {
      get { return authenticationCase_ == AuthenticationOneofCase.DisableAuth ? (bool) authentication_ : false; }
      set {
        authentication_ = value;
        authenticationCase_ = AuthenticationOneofCase.DisableAuth;
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 9;
    private string protocol_ = "";
    /// <summary>
    /// The protocol used for sending a request to the backend.
    /// The supported values are "http/1.1" and "h2".
    ///
    /// The default value is inferred from the scheme in the
    /// [address][google.api.BackendRule.address] field:
    ///
    ///    SCHEME        PROTOCOL
    ///    http://       http/1.1
    ///    https://      http/1.1
    ///    grpc://       h2
    ///    grpcs://      h2
    ///
    /// For secure HTTP backends (https://) that support HTTP/2, set this field
    /// to "h2" for improved performance.
    ///
    /// Configuring this field to non-default values is only supported for secure
    /// HTTP backends. This field will be ignored for all other backends.
    ///
    /// See
    /// https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
    /// for more details on the supported values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Protocol {
      get { return protocol_; }
      set {
        protocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object authentication_;
    /// <summary>Enum of possible cases for the "authentication" oneof.</summary>
    public enum AuthenticationOneofCase {
      None = 0,
      JwtAudience = 7,
      DisableAuth = 8,
    }
    private AuthenticationOneofCase authenticationCase_ = AuthenticationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationOneofCase AuthenticationCase {
      get { return authenticationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAuthentication() {
      authenticationCase_ = AuthenticationOneofCase.None;
      authentication_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackendRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackendRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Selector != other.Selector) return false;
      if (Address != other.Address) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Deadline, other.Deadline)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinDeadline, other.MinDeadline)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OperationDeadline, other.OperationDeadline)) return false;
      if (PathTranslation != other.PathTranslation) return false;
      if (JwtAudience != other.JwtAudience) return false;
      if (DisableAuth != other.DisableAuth) return false;
      if (Protocol != other.Protocol) return false;
      if (AuthenticationCase != other.AuthenticationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Selector.Length != 0) hash ^= Selector.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Deadline != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Deadline);
      if (MinDeadline != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinDeadline);
      if (OperationDeadline != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OperationDeadline);
      if (PathTranslation != global::Google.Api.BackendRule.Types.PathTranslation.Unspecified) hash ^= PathTranslation.GetHashCode();
      if (authenticationCase_ == AuthenticationOneofCase.JwtAudience) hash ^= JwtAudience.GetHashCode();
      if (authenticationCase_ == AuthenticationOneofCase.DisableAuth) hash ^= DisableAuth.GetHashCode();
      if (Protocol.Length != 0) hash ^= Protocol.GetHashCode();
      hash ^= (int) authenticationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Selector.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Selector);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (Deadline != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Deadline);
      }
      if (MinDeadline != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinDeadline);
      }
      if (OperationDeadline != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(OperationDeadline);
      }
      if (PathTranslation != global::Google.Api.BackendRule.Types.PathTranslation.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) PathTranslation);
      }
      if (authenticationCase_ == AuthenticationOneofCase.JwtAudience) {
        output.WriteRawTag(58);
        output.WriteString(JwtAudience);
      }
      if (authenticationCase_ == AuthenticationOneofCase.DisableAuth) {
        output.WriteRawTag(64);
        output.WriteBool(DisableAuth);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Protocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Selector.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Selector);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (Deadline != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Deadline);
      }
      if (MinDeadline != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinDeadline);
      }
      if (OperationDeadline != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(OperationDeadline);
      }
      if (PathTranslation != global::Google.Api.BackendRule.Types.PathTranslation.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) PathTranslation);
      }
      if (authenticationCase_ == AuthenticationOneofCase.JwtAudience) {
        output.WriteRawTag(58);
        output.WriteString(JwtAudience);
      }
      if (authenticationCase_ == AuthenticationOneofCase.DisableAuth) {
        output.WriteRawTag(64);
        output.WriteBool(DisableAuth);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Protocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Selector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Selector);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Deadline != 0D) {
        size += 1 + 8;
      }
      if (MinDeadline != 0D) {
        size += 1 + 8;
      }
      if (OperationDeadline != 0D) {
        size += 1 + 8;
      }
      if (PathTranslation != global::Google.Api.BackendRule.Types.PathTranslation.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PathTranslation);
      }
      if (authenticationCase_ == AuthenticationOneofCase.JwtAudience) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JwtAudience);
      }
      if (authenticationCase_ == AuthenticationOneofCase.DisableAuth) {
        size += 1 + 1;
      }
      if (Protocol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Protocol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackendRule other) {
      if (other == null) {
        return;
      }
      if (other.Selector.Length != 0) {
        Selector = other.Selector;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Deadline != 0D) {
        Deadline = other.Deadline;
      }
      if (other.MinDeadline != 0D) {
        MinDeadline = other.MinDeadline;
      }
      if (other.OperationDeadline != 0D) {
        OperationDeadline = other.OperationDeadline;
      }
      if (other.PathTranslation != global::Google.Api.BackendRule.Types.PathTranslation.Unspecified) {
        PathTranslation = other.PathTranslation;
      }
      if (other.Protocol.Length != 0) {
        Protocol = other.Protocol;
      }
      switch (other.AuthenticationCase) {
        case AuthenticationOneofCase.JwtAudience:
          JwtAudience = other.JwtAudience;
          break;
        case AuthenticationOneofCase.DisableAuth:
          DisableAuth = other.DisableAuth;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Selector = input.ReadString();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 25: {
            Deadline = input.ReadDouble();
            break;
          }
          case 33: {
            MinDeadline = input.ReadDouble();
            break;
          }
          case 41: {
            OperationDeadline = input.ReadDouble();
            break;
          }
          case 48: {
            PathTranslation = (global::Google.Api.BackendRule.Types.PathTranslation) input.ReadEnum();
            break;
          }
          case 58: {
            JwtAudience = input.ReadString();
            break;
          }
          case 64: {
            DisableAuth = input.ReadBool();
            break;
          }
          case 74: {
            Protocol = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Selector = input.ReadString();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 25: {
            Deadline = input.ReadDouble();
            break;
          }
          case 33: {
            MinDeadline = input.ReadDouble();
            break;
          }
          case 41: {
            OperationDeadline = input.ReadDouble();
            break;
          }
          case 48: {
            PathTranslation = (global::Google.Api.BackendRule.Types.PathTranslation) input.ReadEnum();
            break;
          }
          case 58: {
            JwtAudience = input.ReadString();
            break;
          }
          case 64: {
            DisableAuth = input.ReadBool();
            break;
          }
          case 74: {
            Protocol = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BackendRule message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Path Translation specifies how to combine the backend address with the
      /// request path in order to produce the appropriate forwarding URL for the
      /// request.
      ///
      /// Path Translation is applicable only to HTTP-based backends. Backends which
      /// do not accept requests over HTTP/HTTPS should leave `path_translation`
      /// unspecified.
      /// </summary>
      public enum PathTranslation {
        [pbr::OriginalName("PATH_TRANSLATION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Use the backend address as-is, with no modification to the path. If the
        /// URL pattern contains variables, the variable names and values will be
        /// appended to the query string. If a query string parameter and a URL
        /// pattern variable have the same name, this may result in duplicate keys in
        /// the query string.
        ///
        /// # Examples
        ///
        /// Given the following operation config:
        ///
        ///     Method path:        /api/company/{cid}/user/{uid}
        ///     Backend address:    https://example.cloudfunctions.net/getUser
        ///
        /// Requests to the following request paths will call the backend at the
        /// translated path:
        ///
        ///     Request path: /api/company/widgetworks/user/johndoe
        ///     Translated:
        ///     https://example.cloudfunctions.net/getUser?cid=widgetworks&amp;uid=johndoe
        ///
        ///     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
        ///     Translated:
        ///     https://example.cloudfunctions.net/getUser?timezone=EST&amp;cid=widgetworks&amp;uid=johndoe
        /// </summary>
        [pbr::OriginalName("CONSTANT_ADDRESS")] ConstantAddress = 1,
        /// <summary>
        /// The request path will be appended to the backend address.
        ///
        /// # Examples
        ///
        /// Given the following operation config:
        ///
        ///     Method path:        /api/company/{cid}/user/{uid}
        ///     Backend address:    https://example.appspot.com
        ///
        /// Requests to the following request paths will call the backend at the
        /// translated path:
        ///
        ///     Request path: /api/company/widgetworks/user/johndoe
        ///     Translated:
        ///     https://example.appspot.com/api/company/widgetworks/user/johndoe
        ///
        ///     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
        ///     Translated:
        ///     https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST
        /// </summary>
        [pbr::OriginalName("APPEND_PATH_TO_ADDRESS")] AppendPathToAddress = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
